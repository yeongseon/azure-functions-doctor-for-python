# ----------------------------------------
# üì¶ Build System
# ----------------------------------------
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ----------------------------------------
# üèóÔ∏è Hatch Build Configuration
# ----------------------------------------
[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
# The package name will be resolved under "src/"
# No need to set "packages" explicitly unless necessary

[tool.hatch.version]
path = "src/azure_functions_doctor/__init__.py"

# ----------------------------------------
# üöÄ Hatch Publish Configuration
# ----------------------------------------
[tool.hatch.publish.index]
default = "pypi"

[tool.hatch.publish.index.repos.pypi]
url = "https://upload.pypi.org/legacy/"

[tool.hatch.publish.index.repos.test]
url = "https://test.pypi.org/legacy/"

# ----------------------------------------
# üìÑ Project Metadata
# ----------------------------------------
[project]
name = "azure-functions-doctor"
dynamic = ["version"]
description = "A diagnostic tool for Python Azure Functions"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }

authors = [
  { name = "Yeongseon Choe", email = "yeongseon.choe@gmail.com" }
]

# Runtime dependencies
dependencies = [
  "typer",
  "rich",
  "requests",
  "packaging"
]

# Classifiers for PyPI
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules"
]

# Optional development dependencies
[project.optional-dependencies]
dev = [
  "black==24.4.2",
  "build",
  "coverage",
  "hatch",
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings[python]",
  "mypy==1.15.0",
  "pre-commit",
  "pytest",
  "ruff==0.11.11",
  "types-requests",
  "tox"
]

# CLI entry point
[project.scripts]
func-doctor = "azure_functions_doctor.cli:cli"

# ----------------------------------------
# üß™ Hatch Environments
# ----------------------------------------
[tool.hatch.envs.default]
features = ["dev"]

[tool.hatch.envs.default.scripts]
format = "ruff format src/azure_functions_doctor tests && black src/azure_functions_doctor tests"
style = "ruff check src/azure_functions_doctor tests"
typecheck = "mypy src/azure_functions_doctor tests"
lint = "hatch run style && hatch run typecheck"
test = "pytest -v tests"
cov = "coverage run -m pytest && coverage report && coverage html"
docs = "mkdocs serve"
precommit = "pre-commit run --all-files"
precommit-install = "pre-commit install"

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve"

# ----------------------------------------
# üé® Code Formatter - Black
# ----------------------------------------
[tool.black]
line-length = 120
target-version = ["py39"]

# ----------------------------------------
# üîç Linter - Ruff
# ----------------------------------------
[tool.ruff]
line-length = 120
target-version = "py39"
exclude = [".venv", "build", "dist", "__pycache__"]
src = ["src/azure_functions_doctor"]
fix = true

[tool.ruff.lint]
select = ["E", "F", "I", "B"]

[tool.ruff.lint.isort]
known-first-party = ["azure_functions_doctor"]

# ----------------------------------------
# üß† Type Checker - Mypy
# ----------------------------------------
[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_configs = true
show_error_codes = true
pretty = true
ignore_missing_imports = true

# ----------------------------------------
# üß™ Testing Framework - Pytest
# ----------------------------------------
[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]

# ----------------------------------------
# üìä Coverage Reporting
# ----------------------------------------
[tool.coverage.run]
branch = true
source = ["src/azure_functions_doctor"]

[tool.coverage.report]
show_missing = true
skip_covered = true
